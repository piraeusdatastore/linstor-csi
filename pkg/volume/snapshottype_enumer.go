// Code generated by "enumer -type=SnapshotType -trimprefix=SnapshotType"; DO NOT EDIT.

package volume

import (
	"fmt"
	"strings"
)

const _SnapshotTypeName = "InClusterS3LinstorUnknown"

var _SnapshotTypeIndex = [...]uint8{0, 9, 11, 18, 25}

const _SnapshotTypeLowerName = "inclusters3linstorunknown"

func (i SnapshotType) String() string {
	if i < 0 || i >= SnapshotType(len(_SnapshotTypeIndex)-1) {
		return fmt.Sprintf("SnapshotType(%d)", i)
	}
	return _SnapshotTypeName[_SnapshotTypeIndex[i]:_SnapshotTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _SnapshotTypeNoOp() {
	var x [1]struct{}
	_ = x[SnapshotTypeInCluster-(0)]
	_ = x[SnapshotTypeS3-(1)]
	_ = x[SnapshotTypeLinstor-(2)]
	_ = x[SnapshotTypeUnknown-(3)]
}

var _SnapshotTypeValues = []SnapshotType{SnapshotTypeInCluster, SnapshotTypeS3, SnapshotTypeLinstor, SnapshotTypeUnknown}

var _SnapshotTypeNameToValueMap = map[string]SnapshotType{
	_SnapshotTypeName[0:9]:        SnapshotTypeInCluster,
	_SnapshotTypeLowerName[0:9]:   SnapshotTypeInCluster,
	_SnapshotTypeName[9:11]:       SnapshotTypeS3,
	_SnapshotTypeLowerName[9:11]:  SnapshotTypeS3,
	_SnapshotTypeName[11:18]:      SnapshotTypeLinstor,
	_SnapshotTypeLowerName[11:18]: SnapshotTypeLinstor,
	_SnapshotTypeName[18:25]:      SnapshotTypeUnknown,
	_SnapshotTypeLowerName[18:25]: SnapshotTypeUnknown,
}

var _SnapshotTypeNames = []string{
	_SnapshotTypeName[0:9],
	_SnapshotTypeName[9:11],
	_SnapshotTypeName[11:18],
	_SnapshotTypeName[18:25],
}

// SnapshotTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func SnapshotTypeString(s string) (SnapshotType, error) {
	if val, ok := _SnapshotTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _SnapshotTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to SnapshotType values", s)
}

// SnapshotTypeValues returns all values of the enum
func SnapshotTypeValues() []SnapshotType {
	return _SnapshotTypeValues
}

// SnapshotTypeStrings returns a slice of all String values of the enum
func SnapshotTypeStrings() []string {
	strs := make([]string, len(_SnapshotTypeNames))
	copy(strs, _SnapshotTypeNames)
	return strs
}

// IsASnapshotType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i SnapshotType) IsASnapshotType() bool {
	for _, v := range _SnapshotTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
